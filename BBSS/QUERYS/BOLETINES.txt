BOLETIN 1

#1. Mostrar todos los empleados y todos sus atributos.
SELECT * FROM employees;

#2. Mostrar todos los productos y todos sus atributos.
SELECT * FROM products;

#3. Mostrar el código, nombre y categoría de los productos.
SELECT ProductID, ProductName, CategoryID FROM products;

#4. Mostrar los productos que pertenecen a la categoría 2.
SELECT * FROM products WHERE CategoryID = 2;

#5. Productos que pertenece a la categoría 2 y 4.
SELECT * FROM products WHERE CategoryID =2 AND CategoryID =4;

#6. Productos que pertenece a la categoría 2 o 4.
SELECT * FROM products WHERE CategoryID = 2 OR CategoryID = 4;

#7. Mostrar id de producto, nombre de producto y precio unitario para todos aquellos productos cuyo precio unitario sea superior a 100.
SELECT ProductId, ProductName, UnitPrice FROM products WHERE UnitPrice > 100;

#8. Mostrar el producto con nombre “tofu”.
SELECT * FROM products WHERE ProductName = "tofu";

#9. Mostrar los productos cuyo ID se encuentra en la categoría, 2, 3 o 4. Hacer de dos formas distintas.
SELECT * FROM products WHERE CategoryID IN (2,3,4);
SELECT * FROM products WHERE CategoryID = 2 OR CategoryID = 3 OR CategoryID = 4;

#10. Mostrar los productos cuyo ID de proveedor se encuentra en la categoría 3,5 o 8.
SELECT * FROM products WHERE SupplierID IN (3,5,8);

#11. Mostrar los productos cuyo precio oscilan entre 30 y 60 dólares.
SELECT * FROM products WHERE UnitPrice <=60 AND UnitPrice >=30;

#12. Mostrar los productos cuyo stock está entre 0 y 10.
SELECT * FROM products WHERE UnitsInStock <=10 AND UnitsInStock >= 0;

#13. Mostrar todos los productos que empiezan con ‘c’.
SELECT * FROM products WHERE ProductName LIKE ("c%");

#14. Ordenar todos los productos por nombre, en orden ascendente.
SELECT * FROM products ORDER BY ProductName ASC;

#15. Ordenar todos los productos por ID, en orden descendente.
SELECT * FROM products ORDER BY ProductID DESC;

#16. Seleccione todos los campos de la tabla cliente, ordenado por nombre del contacto de la compañía, alfabéticamente.
SELECT * FROM customers ORDER BY CompanyName;

#17. Seleccione todos los campos de la tabla órdenes, ordenados por fecha de la orden, descendentemente.
SELECT * FROM orders ORDER BY OrderDate DESC;

#18. Seleccione todos los campos de la tabla detalle de la orden, ordenada por cantidad pedida. Ascendentemente.
SELECT * FROM orderdetails ORDER BY Quantity ASC;

#19. Obtener todos los productos, cuyo nombre comienzan con la letra P y tienen un precio unitario comprendido entre 10 y 120.
SELECT * FROM products WHERE ProductName LIKE ("P%") AND UnitPrice <=120 AND UnitPrice >=10;

#20. Obtener todos los clientes de los países de: USA, Francia o UK. Hacer de dos formas.
SELECT * FROM customers WHERE Country IN ("USA","FRANCE","UK");
SELECT * FROM customers WHERE Country = "USA" OR Country="FRANCE" OR Country= "UK";

#21. Obtener todos los productos discontinuados (Discontinued=1) o sin stock, que pertenecen a la categoría 1, 3, 4 o 7.
SELECT * FROM products WHERE (Discontinued = 1  OR UnitsInStock < 1) AND CategoryID IN (1,3,4,7);

#22. Obtener todas las órdenes hechas por el empleado con código: 2, 5 o 7 en el año 1996.
SELECT * FROM orders 
WHERE EmployeeID IN (2,5,7) AND OrderDate 
BETWEEN '1996-01-01' AND '1996-12-31';

#23. Seleccionar todos los clientes que cuenten con Fax (valor distinto de null).
SELECT * FROM customers WHERE Fax IS NOT NULL;

#24. Seleccionar todos los empleados que cuentan con un jefe (campo ReportsTo).
SELECT * FROM employees WHERE ReportsTo IS NOT NULL;

#25. Seleccionar todos los campos del cliente, cuya compañía empiecen con letra A hasta la D y 
-- pertenezcan al país de USA, ordenarlos por la dirección.
SELECT * FROM customers 
WHERE CompanyName BETWEEN "A%" AND "D%" 
AND  Country = "USA" 
ORDER BY Address;

#26. Seleccionar todos los campos del cliente, cuya compañía empiecen con las letras de la B a la G, 
-- y pertenezcan al país de UK, ordenarlos por nombre de la compañía
SELECT * FROM customers 
WHERE (CompanyName LIKE ("B%") 
OR CompanyName LIKE ("C%") 
OR CompanyName LIKE ("D%") 
OR CompanyName LIKE ("E%")
OR CompanyName LIKE ("F%") 
OR CompanyName LIKE ("G%")) 
AND Country ="UK" order by CompanyName;

#27. Seleccionar los productos vigentes cuyos precios unitarios están entre 35 y 250, sin stock en almacén, pertenecientes a las categorías 1, 3, 4, 7 o 8,
-- que son distribuidos por los proveedores, 2, 4, 6, 7, 8 o 9
SELECT * FROM products 
WHERE (UnitPrice >=35 AND UnitPrice <=250) 
AND UnitsInStock=0 
AND CategoryID IN (1,3,4,7,8) 
AND SupplierID IN (2,4,6,7,8,9);

#28. seleccionar todos los campos de los productos descontinuados, que pertenezcan a los proveedores con códigos: 1, 3, 7, 8 y 9, 
-- que tengan stock en almacén, y al mismo tiempo que sus precios unitarios estén entre 39 y 190, ordenados por código de proveedores 
-- y precio unitario de manera ascendente.
SELECT * FROM northwind.products 
WHERE (Discontinued = 1) 
AND SupplierID IN (1,3,7,8,9) AND UnitsInStock > 0 AND (UnitPrice >= 39 AND UnitPrice <=190) 
ORDER BY (SupplierID AND UnitPrice) ASC;


BOLETIN 2

/*1. Seleccionar las órdenes de compra (Orders) realizadas por el empleado con código
entre el 2 y 5 con fecha de pedido del 31 de julio de cualquier año. Buscar
información sobre la función EXTRACT.*/

SELECT * FROM orders WHERE (EmployeeID >=2 AND EmployeeID <=5) AND (extract(month FROM OrderDate)=07 AND extract(day FROM OrderDate)=31);

/*2. Seleccionar las órdenes de compra realizadas por el empleado con código 3, de
cualquier año, pero solo de los últimos 5 meses (agosto-diciembre). Buscar
información sobre la función MONTH.*/

SELECT * FROM orders WHERE (EmployeeID =3) AND (month(OrderDate) IN (8,9,10,11,12));

/*3. Seleccionar los detalles de las órdenes de compras (tabla OrderDetails) que tengan
cantidades entre 10 y 250.*/

SELECT * FROM orderdetails WHERE Quantity >= 10 AND Quantity <=250;

/*4. Seleccionar los detalles de las órdenes de compras cuyo coste (precio unitario x
unidades) se encuentre entre 10 y 330. Mostrar el coste como TOTAL.*/

SELECT *, UnitPrice*Quantity "TOTAL" FROM orderdetails WHERE (UnitPrice*Quantity >= 10 AND UnitPrice*Quantity <= 330);

/*5. Hacer un listado de todos los países a los que pertenecen los distintos clientes
(buscar información sobre el operador DISCTINCT).*/

SELECT DISTINCT Country FROM customers;

/*6. Mostrar los 15 productos más vendidos.*/

SELECT * FROM products ORDER BY UnitsOnOrder DESC LIMIT 0,15 ;

/*7. Imprimir el nombre de todos los empleados, así como la longitud en caracteres del
mismo (en dos columnas).*/

SELECT FirstName, length(Firstname) "Longitud nombre" FROM employees;

/*8. Imprimir en una única columna el nombre y apellidos de todos los empleados,
concatenados.*/

SELECT concat(FirstName,' ',LastName) AS NombreyApellido FROM employees;

/*9. Imprimir el nombre de los empleados en minúsculas y el apellido en mayúsculas.*/

SELECT lcase(FirstName) "Nombre minúsculas", ucase(LastName) "Apellido mayúsculas" FROM employees;

/*10. Imprimir el nombre de los empleados, excluyendo la primera y última letra.*/

SELECT substr(FirstName, 2, char_length(FirstName)-2) FROM employees;

/*11. Imprimir el nombre, apellidos y fecha de nacimiento de todos los empleados. La
fecha de nacimiento debe estar en el formato europeo (DD—MM--AAAA).*/

SELECT FirstName, LastName, date_format(BirthDate,"%d-%m-%Y") FROM employees;

/*12. Por cada empleado, imprimir junto a su nombre y apellidos, el número de años que
han transcurrido desde su nacimiento hasta su contratación.*/

SELECT FirstName, LastName, (extract(year FROM HireDate)-extract(year FROM BirthDate)) "Años desde nacimiento a contratacion" FROM employees;

/*13. Por cada empleado, imprimir el número de años que han transcurrido desde su
contratación hasta la fecha actual.*/

SELECT (extract(year FROM curdate()) - extract(year FROM HireDate)) "Años transcurridos desde contrato hasta hoy" FROM employees;

/*14. Repetir el ejercicio anterior expresando el resultado en meses.*/

SELECT (period_diff(date_format(curdate(),"%Y%m"),date_format(HireDate,"%Y%m"))) "Meses transcurridos desde contrato hasta hoy" FROM employees;

/*15. Repetir el ejercicio anterior expresando el resultado en días.*/

SELECT (datediff(curdate(),HireDate)) "Días transcurridos desde contrato hasta hoy" FROM employees;

/*16. Imprimir el nombre del día de la semana en el que nació cada empleado, junto con
su nombre y apellidos.*/

SELECT date_format(BirthDate, "%W") "Día de la semana naciemiento", FirstName, LastName FROM employees;

/*17. Imprimir el nombre del mes en el que fue contratado cada empleado, junto con su
nombre y apellidos.*/

SELECT date_format(HireDate, "%M") "Mes de contratación", FirstName, LastName FROM employees;

/*18. Por cada pedido, imprimir el id de pedido, nombre del producto y beneficio (precio unitario x
unidades del pedido).*/

/*FALTA POR VER LAS JOINS*/

/*19. Repetir el ejercicio anterior añadiendo una nueva columna con el nuevo beneficio
resultante de incrementar un 20% el precio unitario del producto. Imprimir esa nueva
columna como ‘NUEVO BENEFICIO’.*/

/*FALTA POR VER LAS JOINS*/

/*20. Por cada empleado, imprimir nombre, apellidos, fecha de contratación y antigüedad
en días (días que lleva contratado).*/

SELECT FirstName, LastName, HireDate, ((extract(year FROM curdate()) - extract(year FROM HireDate))*365) "Antigüedad en días" FROM employees;

/*21. Repetir el ejercicio anterior añadiendo una nueva columna con la edad a la que fue
contratado.*/

SELECT FirstName, LastName, HireDate, ((extract(year FROM HireDate) - extract(year FROM BirthDate))) "Años con los que fue contratado" FROM employees;

/*22. Seleccionar los 7 productos con precio más caro, que cuenten con stock en
almacén. Buscar información sobre la función LIMIT.*/

SELECT * FROM products WHERE UnitsInStock > 0 ORDER BY UnitPrice DESC LIMIT 7;

/*23. Seleccionar los 9 productos con menos stock en almacén, que pertenezcan a la
categoría 3, 5 u 8.*/

SELECT * FROM products WHERE CategoryID IN (3,5,8) ORDER BY UnitsInStock ASC LIMIT 9;



GROUP BY

/*1. Por cada pedido, mostrar el número de líneas (tabla OrderDetails).*/

SELECT OrderID, COUNT(*) FROM orderdetails GROUP BY OrderID;

/*2. Por cada producto, mostrar el número de líneas (tabla OrderDetails).*/

SELECT ProductID, COUNT(*) FROM orderdetails GROUP BY ProductID;

/*3. Por cada cliente, mostrar el número de pedidos.*/

SELECT CustomerID, COUNT(*) FROM orders GROUP BY CustomerID;

/*4. Repetir el anterior sólo con los clientes de Londres.*/

SELECT CustomerID, COUNT(*), ShipCity FROM orders GROUP BY CustomerID HAVING ShipCity="London";

/*5. Repetir el ejercicio 1 mostrando sólo aquellos que tienen más de 4 líneas.*/

SELECT OrderID, COUNT(*) FROM orderdetails GROUP BY OrderID HAVING COUNT(*)>4;

/*6. Por cada cliente, mostrar el número de pedidos sólo para los clientes con más de 10
pedidos.*/

SELECT CustomerID, COUNT(CustomerID) FROM orders GROUP BY CustomerID HAVING(COUNT(OrderID))>10 ORDER BY COUNT(CustomerID);

/*7. Mostrar el número de empleados en cada ciudad.*/

SELECT (COUNT(EmployeeID)), City FROM employees GROUP BY City;

/*8. Mostrar el número de empleados en cada ciudad que tenga al menos dos empleados.*/

SELECT COUNT(EmployeeID), City FROM employees GROUP BY City HAVING COUNT(EmployeeID)>=2;

/*9. Mostrar el número de empleados en cada ciudad que tengan el cargo de ‘Sales
representative’, para aquellas ciudades con al menos dos empleados de este cargo.
Ordenar por el número de empleados.*/

SELECT (COUNT(EmployeeID)), City FROM employees GROUP BY City, Title HAVING (COUNT(EmployeeID)>=2 AND Title="Sales Representative");

/*SELECT (COUNT(EmployeeID)), City FROM employees WHERE Title="Sales Representative" GROUP BY City HAVING ((COUNT(EmployeeID))>=2);*/

/*10. Muestra las distintas ciudades en las que hay empleados.*/

SELECT City FROM employees GROUP BY City HAVING (COUNT(EmployeeID))>0;

/*11. Cuenta las ciudades en las que hay empleados.*/

SELECT COUNT(DISTINCT City) FROM employees;

/*12. Por cada país y ciudad de envío, mostrar el total de pedidos.*/

SELECT COUNT(*), ShipCity, ShipCountry FROM orders GROUP BY ShipCity, ShipCountry;

/*13. Por cada país y ciudad, contar los empleados que tienen el cargo de ‘Sales
representative’.*/

SELECT COUNT(EmployeeID), City, Country FROM employees WHERE Title ="Sales Representative" GROUP BY City, Country;

/*14. Por cada país y ciudad, contar el número de clientes.*/

SELECT COUNT(CustomerID), City, Country 
FROM customers 
GROUP BY City, Country;

/*15. Repetir el anterior mostrando sólo aquellos que tienen más de un cliente.*/

SELECT COUNT(CustomerID), City, Country 
FROM customers 
GROUP BY City, Country 
HAVING (COUNT(*))>1;

/*16. Por cada producto, hallar la cantidad de unidades vendidas y la media por pedido.*/

SELECT ProductID, SUM(Quantity), AVG(Quantity) 
FROM orderdetails 
GROUP BY ProductID;

/*17. Por cada pedido, contar los distintos productos vendidos (no la cantidad).*/

SELECT OrderID, COUNT(*) 
FROM orderdetails 
GROUP BY OrderID;

/*18. Repetir el anterior mostrando solo los pedidos con un único producto.*/

SELECT OrderID
FROM orderdetails 
GROUP BY OrderID 
HAVING COUNT(*)=1;

/*19. En la tabla de proveedores (suppliers), contar el número de proveedores por cada
título de contacto (ContactTitle).*/

SELECT COUNT(SupplierID), ContactTitle 
FROM suppliers 
GROUP BY ContactTitle;

/*20. Contar el número de productos que empiezan por la letra C.*/

SELECT COUNT(*) 
FROM products 
WHERE ProductName 
LIKE ("C%");

/*21. Contar el número de pedidos que fueron realizados en un mes de Julio (OrderDate).*/

SELECT COUNT(*) 
FROM orders 
WHERE month(OrderDate)=7;

/*22. Contar el número de pedidos realizados por el cliente DUMON en el año 1997.*/

SELECT COUNT(*) 
FROM orders 
WHERE CustomerID="DUMON" 
AND year(OrderDate)=1997;

/*23. Contar el número de pedidos (Orders) en los que los años de sus campos de tipo
fecha no son exactamente iguales.*/

SELECT COUNT(*) 
FROM orders 
WHERE (year(OrderDate)!=year(ShippedDate) 
OR year(OrderDate)!=year(RequiredDate) 
OR year(ShippedDate)!=year(RequiredDate));

SELECT COUNT(*) 
FROM orders 
WHERE (year(OrderDate)!=year(ShippedDate) 
AND year(OrderDate)!=year(RequiredDate) 
AND year(ShippedDate)!=year(RequiredDate));


JOINS

/*1.Obtener todas las ordenes hechas por el empleado King Robert*/

SELECT emp.FirstName, emp.LastName, ord.* 
FROM orders AS ord 
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID) 
WHERE emp.FirstName="Robert" AND emp.LastName="King";

/*2.Obtener todas las ordenes hechas por el empleado King Robert, Davolio Nancy y Fuller Andrew*/

SELECT ord.*, emp.FirstName, emp.LastName 
FROM orders AS ord 
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID) 
WHERE (emp.FirstName="Robert" AND emp.LastName="King") 
OR (emp.FirstName="Nancy" AND emp.LastName="Davolio") 
OR (emp.FirstName="Andrew" AND emp.LastName="Fuller");

/*3.Obtener todas las ordenes por el cliente cuya compania es "Que del?cia"*/

SELECT ord.* FROM orders AS ord WHERE ord.ShipName="Que Del�cia";

/*4.Obtener todos los productos(codigo, nombre, precio, stock) de la orden 10257*/

SELECT prod.ProductID, prod.ProductName, prod.UnitPrice, prod.UnitsInStock,ord.OrderID 
FROM orders AS ord 
JOIN orderdetails AS orddet 
ON (ord.OrderID=orddet.OrderID) 
JOIN products AS prod 
ON (orddet.ProductID=prod.ProductID) 
WHERE ord.OrderID=10257;

/*5.Obtener todos los productos(codigo, nombre, precio, stock) de las ordenes hechas desde 1997 hasta la fecha de hoy*/

SELECT ord.OrderID, prod.ProductID, prod.ProductName, prod.UnitPrice, prod.UnitsInStock 
FROM orders AS ord 
JOIN orderdetails AS orddet 
ON (ord.OrderID=orddet.OrderID) 
JOIN products AS prod 
ON (orddet.ProductID=prod.ProductID) 
WHERE ord.OrderDate BETWEEN '1997-01-01' AND curdate(); /*REVISAR*/

/*6.Mostar el ID del pedido, fecha del pedido y el total de productos de cada pedido*/

SELECT ord.OrderID, ord.OrderDate, SUM(orddet.Quantity) "Total productos"
FROM orders AS ord 
JOIN orderdetails AS orddet 
ON (ord.OrderID=orddet.OrderID) 
GROUP BY orddet.OrderID;

SELECT ord.OrderID, ord.OrderDate, COUNT(*) "Total productos"
FROM orders AS ord 
JOIN orderdetails AS orddet 
ON (ord.OrderID=orddet.OrderID) 
GROUP BY orddet.OrderID;

/*7.Obtener el nombre de todas las categorias y los nombres de sus productos, precio y stock*/

SELECT cat.CategoryName, prod.ProductName, prod.UnitPrice, prod.UnitsInStock 
FROM products AS prod 
JOIN categories AS cat 
ON (prod.CategoryID=cat.CategoryID);

/*8.Obtener el número de productos por cada categoría. Mostrando el nombre de la categoría, el nombre del producto, 
y el total de productos por categoría, solamente de las categorías 3, 5 y 8. Ordenar por el nombre de la categoría*/

SELECT cat.CategoryName, COUNT(cat.CategoryID)
FROM products AS prod
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID)
WHERE cat.CategoryID IN (3,5,8)
GROUP BY cat.CategoryID;

/*9.Visualizar el nombre de la categoria y el numero de productos que hay por cada categoria*/

SELECT cat.CategoryName, COUNT(prod.ProductID) "Total productos"
FROM categories AS cat
JOIN products AS prod
ON (cat.CategoryID=prod.CategoryID)
GROUP BY cat.CategoryID;

/*10. Por cada pedido, obtener el ID de pedido, ID de producto, ID de proveedor y el nombre de la compañía.*/

SELECT ord.OrderID, orddet.ProductID, sup.SupplierID, sup.CompanyName
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID = orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID);

/*11. Por cada pedido, obtener el ID de pedido, ID de empleado y el nombre de empleado.*/

SELECT ord.OrderID, concat_ws(' ',emp.FirstName, emp.LastName) "Nombre empleado"
FROM orders AS ord
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID);

/*12. Por cada producto, obtener el ID de producto, ID de categoría y el nombre de categoría.*/

SELECT prod.ProductID, prod.CategoryID, cat.CategoryName
FROM products AS prod
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID);

/*13. Por cada empleado, imprimir el ID de empleado, nombre, apellido e ID de territorio.*/

SELECT emp.EmployeeID, emp.FirstName, emp.LastName, empter.TerritoryID
FROM employees AS emp
JOIN employeeterritories AS empter
ON (emp.EmployeeID=empter.EmployeeID);

/*14. Por cada cliente, mostrar el ID de cliente, nombre de contacto y pedidos.*/

SELECT cust.CustomerID, cust.ContactName, ord.OrderID
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID);

/*15. Por cada cliente, mostrar el ID de cliente, nombre de contacto y numero total pedidos.*/

SELECT cust.CustomerID, cust.ContactName, COUNT(*) "Total pedidos"
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID)
GROUP BY cust.CustomerID;

/*16. Por cada pedido presente en orderdetails, imprimir toda su información y además, el nombre de la categoría
a la que pertenece*/

SELECT orddet.*, cat.CategoryName
FROM orderdetails AS orddet
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID);

/*17. Por cada pedido, mostrar el ID de pedido, dirección del cliente y dirección del empleado.*/

SELECT ord.OrderID, cust.Address "direc. cliente", emp.Address "direc. empleado"
FROM orders AS ord
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID)
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID);

/*18. Por cada producto, mostrar el ID de producto, nombre de producto y dirección del proveedor.*/

SELECT prod.ProductID, prod.ProductName, sup.Address "Direcc. Proveedor"
FROM products AS prod
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID);

/*19. Visualizar el nombre de la compañía y el id del cliente, fecha, precio unitario y producto de la orden*/

SELECT cust.CompanyName, cust.CustomerID, ord.OrderDate, orddet.UnitPrice, prod.ProductName
FROM customers AS cust
JOIN orders AS ord
ON (ord.CustomerID=cust.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID);

/*20. Mostrar el nombre del producto, el precio, el stock y el nombre de la categoría a la que pertenece*/

SELECT prod.ProductName, prod.UnitPrice, prod.UnitsInStock, cat.CategoryName
FROM products AS prod
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID);

/*21. Mostrar el nombre del producto, el precio producto, el código del proveedor y el nombre de la compañía proveedora*/

SELECT prod.ProductName, prod.UnitPrice, prod.SupplierID, sup.CompanyName
FROM products AS prod
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID);

/*22. Mostrar el id del pedido, fecha, código del producto, precio, código del empleado y su nombre completo*/

SELECT ord.OrderID, ord.OrderDate, orddet.ProductID, orddet.UnitPrice, ord.EmployeeID, concat_ws(' ',emp.FirstName,emp.LastName) "Nombre completo"
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID);

/*23. Calcular el stock de productos por cada categoria. Mostrar el nombre de la categoria y el stock por categoria*/

SELECT cat.CategoryName, SUM(prod.UnitsInStock) "Stock total"
FROM products AS prod
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID)
GROUP BY prod.CategoryID;

/*24. Obtener el nombre del cliente, nombre del proveedor, nombre del empleado y el nombre de los productos que estan en la orden 10794*/

SELECT cust.ContactName "Cliente", sup.CompanyName "Proveedor", concat_ws(' ', emp.FirstName, emp.LastName)"Empleado", prod.ProductName"Producto"
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID)
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
WHERE ord.OrderID="10794";

/*25. Seleccionar el nombre de la compañía del cliente, el código de la orden de compra, la fecha de la orden de compra, código del producto, cantidad pedida del producto, 
nombre del producto, el nombre de la compañía proveedora y la ciudad del proveedor, usar Join*/

SELECT cust.CompanyName "Compañia cliente", ord.OrderID, ord.OrderDate "Fecha orden", orddet.ProductID, orddet.Quantity"Cantidad", prod.ProductName, sup.CompanyName"Proveedor", sup.City "Ciudad provee"
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID);

/*26. Seleccionar cuantos proveedores tengo en cada país, considerando solo a los nombres de los proveedores que comienzan 
con la letra E hasta la letra P, además de mostrar solo los países donde tenga más de 2 proveedores*/

SELECT sup.Country, COUNT(*)
FROM suppliers AS sup
WHERE lower(substring(sup.ContactName,1,1)) BETWEEN ("e") AND ("q")
GROUP BY sup.Country
HAVING COUNT(*)>2;


/*27. Crear una consulta que muestre el nombre de empleado y el número de empleados que cada uno de los empleados tiene a su cargo*/

SELECT empAux.EmployeeID,concat_ws(' ', empAux.FirstName, empAux.LastName) "Empleado", COUNT(*)
FROM employees AS empAux
JOIN employees AS emp
ON (emp.ReportsTo=empAux.EmployeeID)
GROUP BY empaux.EmployeeID;

/*28.Crear una consulta que muestre el nombre de empleado, el número de pedidos tramitado por cada empleado, 
de aquellos empleados que han tramitado mas de 15 pedidos*/

SELECT concat_ws(' ', emp.FirstName, emp.LastName) "Empleado", COUNT(*) "Pedidos"
FROM employees AS emp
JOIN orders AS ord
ON (emp.EmployeeID=ord.EmployeeID)
GROUP BY emp.EmployeeID 
HAVING COUNT(*)>15;

/*29.Crear una consulta que muestre el nombre del cliente, el número de pedidos que nos ha realizado el cliente,
el dinero que nos ha dejado en la empresa, de todos los clientes que sean de USA y que nos han realizado mas de 5 pedidos*/

SELECT cust.ContactName, COUNT(*), SUM(orddet.UnitPrice*orddet.Quantity)
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
WHERE cust.Country="USA"
GROUP BY ord.CustomerID
HAVING COUNT(*)>5;

/*30.Crear una consulta que muestre el nombre del jefe y el número de empleados a su cargo de aquel jefe que mas empleados tenga a su cargo*/

SELECT concat_ws(' ', emp.FirstName, emp.LastName) "Jefe", COUNT(*) "A cargo"
FROM employees AS emp
GROUP BY emp.ReportsTo 
HAVING emp.ReportsTo IS NOT NULL
ORDER BY COUNT(*) DESC LIMIT 1;

/*31.Obtener el nombre del cliente y el número de pedidos del cliente que mas pedidos ha realizado en la empresa*/

SELECT cust.ContactName "Cliente", COUNT(*) "Total pedidos"
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
GROUP BY cust.CustomerID
ORDER BY COUNT(*) DESC LIMIT 1;

/*32.Obtener el nombre del cliente y el volumen de negocio del cliente 
que mas volumen de negocio nos ha dejado en la empresa.*/

SELECT cust.ContactName "Cliente", SUM(orddet.UnitPrice*orddet.Quantity) AS VolumenNegocio
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
GROUP BY cust.CustomerID
ORDER BY VolumenNegocio DESC LIMIT 1;

/*33.Seleccionar el nombre de la compañía del cliente, nombre del contacto, el código de la orden de compra, la fecha de la orden decompra, el código del producto, cantidad pedida del producto, 
nombredel producto y el nombre de la compañía proveedora,usar JOIN. Solamente las compañías proveedoras que comienzan 
con laletra de la A hasta la letra G,además la cantidad pedida del productodebe estar entre 23 y 187*/

SELECT cust.CompanyName "Comp. cliente", cust.ContactName "Contacto cliente", orddet.OrderID, ord.OrderDate, orddet.ProductID, orddet.Quantity, prod.ProductName, sup.CompanyName "Proveedor"
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID)
WHERE (orddet.Quantity>=22 AND orddet.Quantity<=187)
AND (sup.CompanyName LIKE ("A%") OR
sup.CompanyName LIKE ("B%") OR
sup.CompanyName LIKE ("C%") OR
sup.CompanyName LIKE ("D%") OR
sup.CompanyName LIKE ("E%") OR
sup.CompanyName LIKE ("F%") OR
sup.CompanyName LIKE ("G%"));

/*34.Seleccionar el nombre de la compañía del cliente, el código de la orden de compra, la fecha de la orden de compra, 
código del producto, cantidad pedida del producto, nombre del producto, el nombre de la compañía proveedora y la ciudad del proveedor*/

SELECT cust.CompanyName "Comp. cliente", ord.OrderID, ord.OrderDate, orddet.ProductID, orddet.Quantity, prod.ProductName, sup.CompanyName "Proveedor", sup.City "Ciudad proveed."
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID);

/*35.Seleccionar el nombre de la compañía del cliente, nombre del contacto, el código de la orden de compra, la fecha de la orden de compra, código del producto, 
cantidad pedida del producto, nombre del producto y el nombre de la compañía proveedora, usar Join. 
Solamente las compañías proveedoras que comienzan con la letra de la A hasta la letra G, además la cantidad pedida del producto debe estar entre 18 y 190*/

SELECT cust.CompanyName "Comp. cliente", ord.OrderID, ord.OrderDate, orddet.ProductID,
 orddet.Quantity, prod.ProductName, sup.CompanyName "Proveedor", sup.City "Ciudad proveed."
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID)
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN products AS prod
ON (orddet.ProductID=prod.ProductID)
JOIN suppliers AS sup
ON (prod.SupplierID=sup.SupplierID)
WHERE (orddet.Quantity>=18 AND orddet.Quantity<=190)
AND (sup.CompanyName LIKE ("A%") OR
sup.CompanyName LIKE ("B%") OR
sup.CompanyName LIKE ("C%") OR
sup.CompanyName LIKE ("D%") OR
sup.CompanyName LIKE ("E%") OR
sup.CompanyName LIKE ("F%") OR
sup.CompanyName LIKE ("G%"));



REMIX1
-- 1. Contar la cantidad de pedidos que han sido realizados por un cliente
-- de Mexico.

SELECT COUNT(*)
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
WHERE cust.Country="Mexico";

-- 2. Por cada pedido adjuntar, además de su información, el nombre de la 
-- compañía que lo ha enviado (ShipVia).

SELECT ord.*, ship.CompanyName
FROM orders AS ord
JOIN shippers AS ship
ON (ord.ShipVia=ship.ShipperID);

-- 3. Imprimir toda la información de los clientes, con los nombres de las columnas
-- traducidos al castellano y separando con espacios aquellos nombres
-- compuestos de varias palabras.

SELECT CustomerID, CompanyName "Nombre de compañia", ContactName "Nombre de contacto", 
ContactTitle "Titulo", Address "Dirección", City "Ciudad", Region, PostalCode "Codigo postal",
Country "País", Phone "Teléfono", Fax
FROM customers;

-- 4. Por cada producto, mostrar su nombre y la descripción de la categoría
-- a la que pertenece.

SELECT prod.ProductName, cat.Description
FROM products AS prod
JOIN categories AS cat
ON (prod.CategoryID=cat.CategoryID);

-- 5. Mostrar los paises y cantidad de empleados que tiene cada país.

SELECT emp.Country, COUNT(*)
FROM employees AS emp
GROUP BY emp.Country;

-- 6. Contar los pedidos que han sido realizados por clientes de España.

SELECT COUNT(*)
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
WHERE cust.Country="Spain";

-- 7. Mostrar los pedidos realizados por clientes de Suecia y Argentina.

SELECT *
FROM orders AS ord
JOIN customers AS cust
ON (ord.CustomerID=cust.CustomerID)
WHERE cust.Country IN ("Sweden","Argentina");

-- 8. Por cada pedido, mostrar el descuento medio.

SELECT orddet.OrderID, AVG(orddet.Discount)
FROM orderdetails AS orddet
GROUP BY orddet.OrderID;

-- 9. Por cada pedido, contar los productos que incluye, solo para aquellos 
-- pedidos que cuentan con más de tres productos y han sido atendidos por
-- un empleado estadounidense.

SELECT orddet.OrderID, COUNT(*)
FROM orderdetails AS orddet
JOIN orders AS ord
ON (orddet.OrderID=ord.OrderID)
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID)
WHERE emp.Country="USA"
GROUP BY orddet.OrderID HAVING COUNT(*)>3;

-- 10. Mostrar los nombres y apellidos de todos los empleados utilizando
-- una única columna, ordenándolos por edad, de mayor a menor.

SELECT concat_ws(' ', emp.FirstName, emp.LastName), year(curdate())-year(emp.BirthDate) AS Edad
FROM employees AS emp
ORDER BY Edad DESC;


REMIXES2
-- 1. Por cada compañía de envíos, mostrar su nombre y contar el número de pedidos
-- que ha enviado.

SELECT ship.CompanyName, COUNT(*)
FROM shippers AS ship
JOIN orders AS ord
ON (ship.ShipperID=ord.ShipVia)
GROUP BY ord.ShipVia;

-- 2. Mostrar el nombre de los países a los que pertenecen los distintos clientes y empleados,
-- de forma que no se repitan.

SELECT DISTINCT cust.Country, emp.Country
FROM customers AS cust
JOIN orders AS ord
ON (cust.CustomerID=ord.CustomerID)
JOIN employees AS emp
ON (ord.EmployeeID=emp.EmployeeID);

-- 3. Contar los distintos ID de territorios.

SELECT COUNT(DISTINCT terr.TerritoryID) "Nº territorios"
FROM territories AS terr;

-- 4. Contar el número de categorías cuyo nombre empieza por C y termina por S,
-- dando un alias a la columna.

SELECT COUNT(*) "Categorias empiezan por C y acaban en S"
FROM categories AS cat
WHERE cat.CategoryName LIKE ("C%S");

-- 5. Mostrar los distintos territorios, adjuntando también la descripción de región (RegionDescription).

SELECT terr.*, reg.RegionDescription
FROM territories AS terr
JOIN region AS reg
ON (terr.RegionID=reg.RegionID);

-- 6. Contar el número de filas de la tabla customerdemographics.

SELECT COUNT(*)
FROM customerdemographics;

-- 7. Mostrar los nombres de ciudades de los proveedores en orden alfabetico inverso, pero solo
-- para aquellas cuyo nombre de ciudad comienza de la A a la C incluidas ambas letras.

SELECT sup.City
FROM suppliers AS sup
WHERE sup.City LIKE ("A%")
OR sup.City LIKE ("B%")
OR sup.City LIKE ("C%")
ORDER BY sup.City DESC;

-- 8. Por cada nombre de compañía de envíos contar el número de distintos productos 
-- enviados.
-- Es decir, que si una compañía de envíos envía una bata, tres bicis y siete jerseys de cuello
-- de pico estampados a un cliente zamorano y luego la misma compañía de envíos envía
-- una bata a un cliente jienense, esa 
-- compañía de envíos (que Dios la guarde en su alma) habría enviado tres productos distintos.

SELECT ship.CompanyName, COUNT(DISTINCT orddet.ProductID) "Nº distintos productos"
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
JOIN shippers AS ship
ON (ord.ShipVia=ship.ShipperID)
GROUP BY ord.ShipVia;

/*SELECT DISTINCT ProductID
FROM orders AS ord
JOIN orderdetails AS orddet
ON (ord.OrderID=orddet.OrderID)
WHERE ShipVia=1;*/ /*Probar con 1,2,3*/

